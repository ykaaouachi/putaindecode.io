{"head":{"layout":"Post","comments":true,"date":"2014-05-12","title":"npm: choisir la bonne version de ses d√©pendances","tags":["npm","javascript","nodejs"],"authors":["kud"],"description":"Pas plus tard qu'hier, alors que je travaillais tranquillement, apparu soudainement un bug dans mon workflow de build. Il ne m'√©tait plus‚Ä¶"},"body":"<p>Pas plus tard qu'hier, alors que je travaillais tranquillement, apparu soudainement un bug dans mon <em>workflow</em> de <em>build</em>. Il ne m'√©tait plus possible avec <a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> de supprimer des fichiers. Hmmm, ballot, car sans la suppression, mon <em>workflow</em> devenait tout bancal. Bien. Il me fallut remonter la rivi√®re - comme souvent, en tant que d√©veloppeur - afin de constater o√π √©tait le bug. Je suis alors tomb√© sur <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> (bon c'√©tait pas bien loin) qui s'√©tait vu √™tre mis √† jour il y a √† peine 12 heures, comprenant un bug.</p>\n<h2 id=\"contexte\"><a href=\"#contexte\" class=\"phenomic-HeadingAnchor\">#</a>Contexte</h2>\n<p>Bon, vous voyez le topo ?</p>\n<pre><code>{\n  \"name\": \"grunt-contrib-clean\",\n  \"dependencies\": {\n    \"rimraf\": \"~2.2.1\"\n  }\n}\n</code></pre>\n<p><a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> qui contient en <em>dependencies</em> <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> avec une version buggu√©e. Oh la belle affaire. Oui car <code>~2.2.1</code> veut dire \"<a href=\"https://github.com/isaacs/node-semver#ranges\">Raisonnablement proche de 2.2.1</a>\", ce qui se traduit par t√©l√©charger la derni√®re version en <code>2.2.x</code>, soit la <code>2.2.7</code> (celle buggu√©e) lorsque je mis √† jour le package <a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a>.</p>\n<h2 id=\"le-hic\"><a href=\"#le-hic\" class=\"phenomic-HeadingAnchor\">#</a>Le hic</h2>\n<p>Une question m'est venue : comment faire en sorte de figer la version de <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> qui est une d√©pendance de d√©pendance ?</p>\n<p>Ha ! Pas √©vident comme √ßa.</p>\n<p>J'ai d'abord essay√© sans trop d'espoir de t√©l√©charger <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> lui-m√™me en <code>2.2.6</code> mais vu que chaque d√©pendance √† ses propres d√©pendances et qu'elles ne se les partagent pas... c'√©tait peine perdue.</p>\n<p>J'ai donc cherch√©, cherch√©, et je suis tomb√© sur <a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">npm-shrinkwrap</a>: \"Lock down dependency versions\". Bingo !</p>\n<h2 id=\"npm-shrinkwrap-la-solution-pour-figer-vos-dep√©ndances-toutes-vos-d√©pendances\"><a href=\"#npm-shrinkwrap-la-solution-pour-figer-vos-dep%C3%A9ndances-toutes-vos-d%C3%A9pendances\" class=\"phenomic-HeadingAnchor\">#</a>npm-shrinkwrap, la solution pour figer vos dep√©ndances, toutes vos d√©pendances</h2>\n<p><a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">npm-shrinkwrap</a> va vous permettre de d√©finir avec pr√©cision chaque version de chaque d√©pendance.</p>\n<p>Pour cela, faites d'abord un <code>npm install</code> (si vous avez √©videmment un <code>package.json</code>) afin d'installer vos <code>node_modules</code>. Une fois cela fait, lancez <code>npm shrinkwrap</code> qui cr√©era le fichier <code>npm-shrinkwrap.json</code> qui comprendra toutes les d√©finitions de chaque d√©pendance.</p>\n<h3 id=\"figer-une-d√©pendance-de-d√©pendance\"><a href=\"#figer-une-d%C3%A9pendance-de-d%C3%A9pendance\" class=\"phenomic-HeadingAnchor\">#</a>Figer une d√©pendance de d√©pendance</h3>\n<p>Simple, regardez :</p>\n<pre><code>{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"grunt-contrib-clean\": {\n      \"version\": \"0.5.0\",\n      \"from\": \"grunt-contrib-clean@~0.5.*\",\n      \"dependencies\": {\n        \"rimraf\": {\n          \"version\": \"2.2.6\",\n          \"from\": \"rimraf@~2.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.2.6.tgz\"\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>J'ai d√©fini la version de <a href=\"https://github.com/isaacs/rimraf\">rimraf</a> dans <code>dependencies.grunt-contrib-clean.dependencies.rimraf</code>.</p>\n<p>Bon, je ne connais pas tout par coeur non plus, npm-shrinkwrap vous √©crira la totalit√© du fichier avec toutes les d√©finitions mais j'ai volontairement tout supprim√© et gard√© uniquement la partie <a href=\"https://github.com/gruntjs/grunt-contrib-clean\">grunt-contrib-clean</a> car seule cette partie est √† figer. Quand je dis supprimer, je parle r√©ellement dans le fichier final, pas juste ici dans l'article.</p>\n<p>Vous aurez toute l'explication de npm-shrinkwrap sur la <a href=\"https://www.npmjs.org/doc/cli/npm-shrinkwrap.html\">documentation officielle [en]</a>.</p>\n<h2 id=\"choisir-la-bonne-strat√©gie-de-version\"><a href=\"#choisir-la-bonne-strat%C3%A9gie-de-version\" class=\"phenomic-HeadingAnchor\">#</a>Choisir la bonne strat√©gie de version</h2>\n<p>Parce qu'il est important de savoir quelle version exacte nous souhaitons installer dans notre projet, il faut d√©finir avec pr√©cisions ces versions dans <code>package.json</code>.</p>\n<p>Vous pouvez avoir <code>1.2.1</code> ou encore <code>~1.4.6</code> ou bien encore <code>^2.3.1</code>. Mais que veulent dire <code>^</code> ou <code>~</code> ?</p>\n<ul>\n<li><code>1.2.1</code> : cette version exacte</li>\n<li><code>~1.4.6</code> : raisonnablement proche de <code>1.4.6</code></li>\n<li><code>^2.3.1</code> : compatible avec <code>2.3.1</code></li>\n</ul>\n<p>Il est clair que lu comme √ßa, le plus int√©ressant est le <code>^</code> et c'est justement <a href=\"http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/\">celui qui est choisi maintenant [en]</a> lorsque l'on fait un <code>npm install --save</code>. Cool non ?!</p>\n<p>Pour plus d'information sur la d√©finition des versions, <a href=\"https://github.com/isaacs/node-semver#ranges\">c'est par l√†</a> (Oh mon dieu, il a fait un lien avec un \"cliquez ici\").</p>\n<p>Bon. C'est bon ? Vous avez tout compris ? Okay, vous pouvez passer √† <a href=\"/fr/articles/npm/napa/\"><strong>napa</strong></a> maintenant qui vous aidera grandement sur le t√©l√©chargement de projets n'ayant pas de <code>package.json</code>.</p>\n<p>En ce qui concerne npm, je m'arr√™te l√†, et vous propose une petite solution afin d'augmenter la vitesse de vos installations de node modules.</p>\n<h2 id=\"bonus\"><a href=\"#bonus\" class=\"phenomic-HeadingAnchor\">#</a>Bonus</h2>\n<p>Envie d'acc√©l√©rer vos installations npm ? Je vous conseille <a href=\"https://github.com/vvo/npm-pkgr\">npm-pkgr</a>.</p>\n<p>Il hashera votre <code>package.json</code> pour savoir s'il a √©t√© modifi√© ou non, et en fonction de √ßa, il lancera <code>npm install</code> ou non. Sacr√© gain de temps (surtout si vous faites des <code>npm install</code> √† chaque <em>deploy</em>).</p>\n<p>You are now a npm master. üë®</p>\n","rawBody":"\nPas plus tard qu'hier, alors que je travaillais tranquillement, apparu soudainement un bug dans mon _workflow_ de _build_. Il ne m'√©tait plus possible avec [grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean) de supprimer des fichiers. Hmmm, ballot, car sans la suppression, mon _workflow_ devenait tout bancal. Bien. Il me fallut remonter la rivi√®re - comme souvent, en tant que d√©veloppeur - afin de constater o√π √©tait le bug. Je suis alors tomb√© sur [rimraf](https://github.com/isaacs/rimraf) (bon c'√©tait pas bien loin) qui s'√©tait vu √™tre mis √† jour il y a √† peine 12 heures, comprenant un bug.\n\n## Contexte\n\nBon, vous voyez le topo ?\n\n```\n{\n  \"name\": \"grunt-contrib-clean\",\n  \"dependencies\": {\n    \"rimraf\": \"~2.2.1\"\n  }\n}\n```\n\n[grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean) qui contient en _dependencies_ [rimraf](https://github.com/isaacs/rimraf) avec une version buggu√©e. Oh la belle affaire. Oui car `~2.2.1` veut dire \"[Raisonnablement proche de 2.2.1](https://github.com/isaacs/node-semver#ranges)\", ce qui se traduit par t√©l√©charger la derni√®re version en `2.2.x`, soit la `2.2.7` (celle buggu√©e) lorsque je mis √† jour le package [grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean).\n\n## Le hic\n\nUne question m'est venue : comment faire en sorte de figer la version de [rimraf](https://github.com/isaacs/rimraf) qui est une d√©pendance de d√©pendance ?\n\nHa ! Pas √©vident comme √ßa.\n\nJ'ai d'abord essay√© sans trop d'espoir de t√©l√©charger [rimraf](https://github.com/isaacs/rimraf) lui-m√™me en `2.2.6` mais vu que chaque d√©pendance √† ses propres d√©pendances et qu'elles ne se les partagent pas... c'√©tait peine perdue.\n\nJ'ai donc cherch√©, cherch√©, et je suis tomb√© sur [npm-shrinkwrap](https://www.npmjs.org/doc/cli/npm-shrinkwrap.html): \"Lock down dependency versions\". Bingo !\n\n## npm-shrinkwrap, la solution pour figer vos dep√©ndances, toutes vos d√©pendances\n\n[npm-shrinkwrap](https://www.npmjs.org/doc/cli/npm-shrinkwrap.html) va vous permettre de d√©finir avec pr√©cision chaque version de chaque d√©pendance.\n\nPour cela, faites d'abord un `npm install` (si vous avez √©videmment un `package.json`) afin d'installer vos `node_modules`. Une fois cela fait, lancez `npm shrinkwrap` qui cr√©era le fichier `npm-shrinkwrap.json` qui comprendra toutes les d√©finitions de chaque d√©pendance.\n\n### Figer une d√©pendance de d√©pendance\n\nSimple, regardez :\n\n```\n{\n  \"name\": \"my-project\",\n  \"version\": \"1.0.0\",\n  \"dependencies\": {\n    \"grunt-contrib-clean\": {\n      \"version\": \"0.5.0\",\n      \"from\": \"grunt-contrib-clean@~0.5.*\",\n      \"dependencies\": {\n        \"rimraf\": {\n          \"version\": \"2.2.6\",\n          \"from\": \"rimraf@~2.2.1\",\n          \"resolved\": \"https://registry.npmjs.org/rimraf/-/rimraf-2.2.6.tgz\"\n        }\n      }\n    }\n  }\n}\n```\n\nJ'ai d√©fini la version de [rimraf](https://github.com/isaacs/rimraf) dans `dependencies.grunt-contrib-clean.dependencies.rimraf`.\n\nBon, je ne connais pas tout par coeur non plus, npm-shrinkwrap vous √©crira la totalit√© du fichier avec toutes les d√©finitions mais j'ai volontairement tout supprim√© et gard√© uniquement la partie [grunt-contrib-clean](https://github.com/gruntjs/grunt-contrib-clean) car seule cette partie est √† figer. Quand je dis supprimer, je parle r√©ellement dans le fichier final, pas juste ici dans l'article.\n\nVous aurez toute l'explication de npm-shrinkwrap sur la [documentation officielle [en]](https://www.npmjs.org/doc/cli/npm-shrinkwrap.html).\n\n## Choisir la bonne strat√©gie de version\n\nParce qu'il est important de savoir quelle version exacte nous souhaitons installer dans notre projet, il faut d√©finir avec pr√©cisions ces versions dans `package.json`.\n\nVous pouvez avoir `1.2.1` ou encore `~1.4.6` ou bien encore `^2.3.1`. Mais que veulent dire `^` ou `~` ?\n\n- `1.2.1` : cette version exacte\n- `~1.4.6` : raisonnablement proche de `1.4.6`\n- `^2.3.1` : compatible avec `2.3.1`\n\nIl est clair que lu comme √ßa, le plus int√©ressant est le `^` et c'est justement [celui qui est choisi maintenant [en]](http://fredkschott.com/post/2014/02/npm-no-longer-defaults-to-tildes/) lorsque l'on fait un `npm install --save`. Cool non ?!\n\nPour plus d'information sur la d√©finition des versions, [c'est par l√†](https://github.com/isaacs/node-semver#ranges) (Oh mon dieu, il a fait un lien avec un \"cliquez ici\").\n\nBon. C'est bon ? Vous avez tout compris ? Okay, vous pouvez passer √† [**napa**](/fr/articles/npm/napa/) maintenant qui vous aidera grandement sur le t√©l√©chargement de projets n'ayant pas de `package.json`.\n\nEn ce qui concerne npm, je m'arr√™te l√†, et vous propose une petite solution afin d'augmenter la vitesse de vos installations de node modules.\n\n## Bonus\n\nEnvie d'acc√©l√©rer vos installations npm ? Je vous conseille [npm-pkgr](https://github.com/vvo/npm-pkgr).\n\nIl hashera votre `package.json` pour savoir s'il a √©t√© modifi√© ou non, et en fonction de √ßa, il lancera `npm install` ou non. Sacr√© gain de temps (surtout si vous faites des `npm install` √† chaque _deploy_).\n\nYou are now a npm master. üë®\n","__filename":"fr/articles/npm/versions-dependances/index.md","__url":"/fr/articles/npm/versions-dependances/","__resourceUrl":"/fr/articles/npm/versions-dependances/index.html","__dataUrl":"/fr/articles/npm/versions-dependances/index.html.16e3b5e610386b3825c6928db468b2a7.json"}